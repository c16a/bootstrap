---
- name: add external repositories
  hosts: localhost
  remote_user: root
  vars:
    external_keys:
      - description: 'Google Linux'
        key: 'https://dl.google.com/linux/linux_signing_key.pub'
      - description: 'Microsoft'
        key: 'https://packages.microsoft.com/keys/microsoft.asc'
      - description: 'NVIDIA'
        key: 'https://download.nvidia.com/opensuse/tumbleweed/repodata/repomd.xml.key'
      - description: 'VLC'
        key: 'http://download.videolan.org/pub/vlc/SuSE/Tumbleweed/repodata/repomd.xml.key'
    external_repos:
      - name: 'google-chrome'
        url: 'http://dl.google.com/linux/chrome/rpm/stable/x86_64/'
      - name: 'code'
        url: 'https://packages.microsoft.com/yumrepos/vscode'
      - name: 'nvidia'
        url: 'https://download.nvidia.com/opensuse/tumbleweed'
      - name: 'vlc'
        url: 'http://download.videolan.org/pub/vlc/SuSE/Tumbleweed/'

  tasks:
  - name: Add external keys
    rpm_key:
      key: "{{ item.key }}"
      state: present
    loop: "{{ external_keys }}"

  - name: Enable external repos
    zypper_repository:
      name: "{{ item.name }}"
      repo: "{{ item.url }}"
      auto_import_keys: yes
    loop: "{{ external_repos }}"

- name: install system updates
  hosts: localhost
  remote_user: root

  tasks:
  - name: refresh all repos
    zypper_repository:
      repo: '*'
      runrefresh: yes

  - name: update all packages
    zypper:
      name: '*'
      state: latest

- name: install packages
  hosts: localhost
  remote_user: root
  vars:
    packages:
      - go
      - docker
      - python3-docker-compose
      - bazel
      - git-review
      - curl
      - wget
      - transmission
      - code
      - google-chrome-stable
      - vlc
      - vlc-codecs

  tasks:
  - name: install packages
    zypper:
      name: "{{ item }}"
      state: present
    loop: "{{ packages }}"

  - name: vendor change to vlc
    shell: zypper dup --from vlc --allow-vendor-change
    args:  
      warn: false

  - name: docker create group
    group:
      name: docker
      state: present

  - name: add user to docker group
    user:
      name: c16a
      group: docker

  - name: refresh changes to groups
    shell: newgrp docker

  # - name: Systemctl Docker
  #   systemd:
  #     state: started
  #     enabled: yes
  #     name: docker

  - name: Download K3s script
    get_url:
      url: https://get.k3s.io
      dest: /tmp/k3s.sh

  # - name: install k3s
  #   shell: sh /tmp/k3s.sh
  #   environment:
  #     INSTALL_K3S_CHANNEL: latest

  - name: get kubectl version
    uri:
      url: https://storage.googleapis.com/kubernetes-release/release/stable.txt
      return_content: yes
    register: kubectl_version

  - name: check if kubectl {{ kubectl_version.content }} version is available
    shell: kubectl version --client
    register: existing_kubectl_version

  - name: delete older kubectl file, if any
    file:
      path: /usr/local/bin/kubectl
      state: absent
    when: existing_kubectl_version.stdout.find(kubectl_version.content) == -1

  - name: install kubectl
    get_url:
      url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version.content | trim }}/bin/linux/amd64/kubectl
      dest: /usr/local/bin/kubectl
      mode: u=rwx,g=rwx,o=rwx
    when: existing_kubectl_version.stdout.find(kubectl_version.content) == -1

  - name: enable kubectl bash completion
    shell: /usr/local/bin/kubectl completion bash >/etc/bash_completion.d/kubectl

  - name: get skaffold version
    uri:
      url: https://storage.googleapis.com/skaffold/releases/latest/VERSION
      return_content: yes
    register: skaffold_version

  - name: trim skaffold version output
    shell: echo {{ skaffold_version.content | trim }}
    register: skaffold_version_trimmed

  - name: check if skaffold {{ skaffold_version_trimmed.stdout }} version is available
    shell: skaffold version
    register: existing_skaffold_version

  - name: delete existing skaffold file, if any
    file:
      path: /usr/local/bin/skaffold
      state: absent
    when: existing_skaffold_version.stdout.find(skaffold_version_trimmed.stdout) == -1
    
  - name: install skaffold
    get_url:
      url: https://storage.googleapis.com/skaffold/releases/{{ skaffold_version }}/skaffold-linux-amd64
      dest: /usr/local/bin/skaffold
      mode: u=rwx,g=rwx,o=rwx
    when: existing_skaffold_version.stdout.find(skaffold_version_trimmed.stdout) == -1
